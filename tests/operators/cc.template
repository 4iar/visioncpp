// This file is part of VisionCpp, a lightweight C++ template library
// for computer vision and image processing.
//
// Copyright (C) 2016 Codeplay Software Limited. All Rights Reserved.
//
// Contact: visioncpp@codeplay.com
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "${test_dir}/${test_name}/${test_name}.hpp"

// 0) define test name
TEST(VisionCpp, ${test_name}_${test_target}_${test_storage}_${test_execution}) {

  // 1) chose device
	auto dev =
      visioncpp::make_device<visioncpp::backend::sycl, visioncpp::device::${test_target}>();

  // 2) run test using buffer storage and fuse nodes
  for (int i = 0; i < common::singleton::DataSet::Instance().m_depth; i++) {
    run_test<visioncpp::memory_type::${test_storage}, visioncpp::policy::${test_execution}>(
        dev, common::get${test_storage}(i), i);
  }
}
